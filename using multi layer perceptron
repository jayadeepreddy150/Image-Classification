import numpy as np
from glob import glob
import os
import cv2
path=(r"C:\Users\jayadeep\Desktop/cell_images")
print(os.listdir(path))
parasitized= glob(r'C:\Users\jayadeep\Desktop\cell_images\parasitized\*.png', recursive=True)
uninfected= glob(r'C:\Users\jayadeep\Desktop\cell_images\uninfected\*.png', recursive=True)
x=[]
y=[]
for img in uninfected:
re_size_image = cv2.imread(img)
im = cv2.resize(re_size_image, (60, 60), interpolation=cv2.INTER_CUBIC)
x.append(im)
y.append(0)
for img in parasitized:
re_size_image = cv2.imread(img)
im = cv2.resize(re_size_image, (60, 60), interpolation=cv2.INTER_CUBIC)
x.append(im)
y.append(1)
x = np.array(x)
y = np.array(y)
from sklearn.model_selection import train_test_split
x_train, x_valid, y_train, y_valid = train_test_split(x, y, test_size = 0.2, random_state =101)
x_train = x_train / 255.0
x_valid = x_valid / 255.0
from keras.utils import to_categorical
y1_train = to_categorical(y_train, num_classes = 2)
y1_valid = to_categorical(y_valid, num_classes = 2)
from keras import optimizers
from keras import models
from keras import layers
model = models.Sequential()
model.add(layers.Flatten(input_shape=(60, 60,3)))
model.add(layers.Dense(64, activation='relu'))
model.add(layers.Dense(128, activation='relu'))
model.add(layers.Dense(2, activation='softmax'))
model.compile(optimizer='Adam',
loss='categorical_crossentropy',
metrics=['accuracy'])
history = model.fit(x_train, y1_train, validation_data=(x_valid,y1_valid),epochs=30)
